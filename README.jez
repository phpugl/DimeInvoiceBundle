4./5.2 Coding-WE

Time-Tracker:

Ich würde mich in die Entwicklung gern mit einklinken. Wenn ich aber gleich damit beginne, innerhalb des bestehenden Codes Aufgaben zu übernehmen, wäre das wahrscheinlich wenig effektiv, ich müsste wegen jeder einzelnen Zeile dreimal nachfragen (zumal ich auch in Symfony noch relativ neu bin). 

Deshalb wäre mein Vorschlag, dass ich mich an dem Rechnungsbundle versuche, und zwar folgendermaßen: 

Aus Nutzersicht: 

Wenn man das Bundle per URL aufruft, erscheint eine Maske mit allen Kunden. Klickt man einen Kunden an, erscheint eine weitere Maske mit den diesem Kunden zugeordneten Tasks. Dort kann man die Tasks auswählen, die mit auf die Rechnung sollen und das Ganze dann abschicken. Dann wird eine Rechnung erzeugt.

Zur Vorgehensweise bei der Programmierung:

Die beiden Masken würde ich zuerst als normale Symfony-Formulare implementieren und wenn die laufen, auf die Techniken und zusätzlichen Frameworks aus dem Frontend-Bundle umsteigen. Dann sollte ich auch einigermaßen im Code drinstecken.

Die Rechnung würde ich, bis wir uns entschieden haben, mit welchem Tool wir das PDF generieren, erst einmal nur als Textfile oder als einfaches HTML-File ausgeben. (Für Symfony1 gab es einen TCPDF-Wrapper, ich habe aber nicht rausgekriegt, ob es den für die 2 schon gibt, und weiß auch nicht, ob TCPDF überhaupt die beste Lösung ist) 

Ich stelle mir das evolutionären Prozess vor: Also erst einmal etwas, was in der oben beschriebenen Weise funktioniert, und dann das Programmdesign per Refactoring verfeinern.

Öfter einmal nachfragen werde ich auch hier müssen, schließlich muss ich die Daten, die auf die Rechnung sollen, einlesen, aber nicht so oft. 
Und ich habe die Möglichkeit zu probieren ohne die Angst, etwas kaputt zu  machen.
